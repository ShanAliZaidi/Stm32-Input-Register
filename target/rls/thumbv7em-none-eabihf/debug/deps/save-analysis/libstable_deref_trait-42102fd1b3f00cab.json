{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stable_deref_trait-1.1.1","program":"C:\\Users\\Home\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","stable_deref_trait","C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stable_deref_trait-1.1.1\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=42102fd1b3f00cab","-C","extra-filename=-42102fd1b3f00cab","--out-dir","c:\\Users\\Home\\Desktop\\Programming\\Rust-Programs\\button\\target\\rls\\thumbv7em-none-eabihf\\debug\\deps","--target","thumbv7em-none-eabihf","-L","dependency=c:\\Users\\Home\\Desktop\\Programming\\Rust-Programs\\button\\target\\rls\\thumbv7em-none-eabihf\\debug\\deps","-L","dependency=c:\\Users\\Home\\Desktop\\Programming\\Rust-Programs\\button\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Home\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Home\\Desktop\\Programming\\Rust-Programs\\button\\target\\rls\\thumbv7em-none-eabihf\\debug\\deps\\libstable_deref_trait-42102fd1b3f00cab.rmeta"},"prelude":{"crate_id":{"name":"stable_deref_trait","disambiguator":[6514164583091843833,12179186297973933571]},"crate_root":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stable_deref_trait-1.1.1\\src","external_crates":[{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stable_deref_trait-1.1.1\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[6179814377341127279,15810806659018497542]}},{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stable_deref_trait-1.1.1\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[10095233927134609311,1311941312663600358]}},{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stable_deref_trait-1.1.1\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[4961934893482737060,7310190255483934973]}}],"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stable_deref_trait-1.1.1\\src\\lib.rs","byte_start":334,"byte_end":8883,"line_start":9,"line_end":201,"column_start":1,"column_end":56}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stable_deref_trait-1.1.1\\src\\lib.rs","byte_start":334,"byte_end":8883,"line_start":9,"line_end":201,"column_start":1,"column_end":56},"name":"","qualname":"::","value":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stable_deref_trait-1.1.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22}],"decl_id":null,"docs":"This module defines an unsafe marker trait, StableDeref, for container types that deref to a fixed address which is valid even when the containing type is moved. For example, Box, Vec, Rc, Arc and String implement this trait. Additionally, it defines CloneStableDeref for types like Rc where clones deref to the same address.","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stable_deref_trait-1.1.1\\src\\lib.rs","byte_start":1356,"byte_end":1362,"line_start":19,"line_end":19,"column_start":35,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":5},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stable_deref_trait-1.1.1\\src\\lib.rs","byte_start":5806,"byte_end":5817,"line_start":124,"line_end":124,"column_start":18,"column_end":29},"name":"StableDeref","qualname":"::StableDeref","value":"StableDeref: Deref","parent":null,"children":[],"decl_id":null,"docs":"An unsafe marker trait for types that deref to a stable address, even when moved. For example, this is implemented by Box, Vec, Rc, Arc and String, among others. Even when a Box is moved, the underlying storage remains at a fixed location.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":6},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stable_deref_trait-1.1.1\\src\\lib.rs","byte_start":6375,"byte_end":6391,"line_start":131,"line_end":131,"column_start":18,"column_end":34},"name":"CloneStableDeref","qualname":"::CloneStableDeref","value":"CloneStableDeref: StableDeref + Clone","parent":null,"children":[],"decl_id":null,"docs":"An unsafe marker trait for types where clones deref to the same address. This has all the requirements of StableDeref, and additionally requires that after calling clone(), both the old and new value deref to the same address. For example, Rc and Arc implement CloneStableDeref, but Box and Vec do not.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stable_deref_trait-1.1.1\\src\\lib.rs","byte_start":8318,"byte_end":8321,"line_start":189,"line_end":189,"column_start":44,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stable_deref_trait-1.1.1\\src\\lib.rs","byte_start":8426,"byte_end":8432,"line_start":191,"line_end":191,"column_start":44,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stable_deref_trait-1.1.1\\src\\lib.rs","byte_start":5819,"byte_end":5824,"line_start":124,"line_end":124,"column_start":31,"column_end":36},"kind":"SuperTrait","from":{"krate":1,"index":1704},"to":{"krate":0,"index":5}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stable_deref_trait-1.1.1\\src\\lib.rs","byte_start":6393,"byte_end":6404,"line_start":131,"line_end":131,"column_start":36,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":5},"to":{"krate":0,"index":6}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stable_deref_trait-1.1.1\\src\\lib.rs","byte_start":6407,"byte_end":6412,"line_start":131,"line_end":131,"column_start":50,"column_end":55},"kind":"SuperTrait","from":{"krate":1,"index":2181},"to":{"krate":0,"index":6}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stable_deref_trait-1.1.1\\src\\lib.rs","byte_start":8318,"byte_end":8321,"line_start":189,"line_end":189,"column_start":44,"column_end":47},"kind":{"Impl":{"id":0}},"from":{"krate":1,"index":2955},"to":{"krate":0,"index":5}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stable_deref_trait-1.1.1\\src\\lib.rs","byte_start":8426,"byte_end":8432,"line_start":191,"line_end":191,"column_start":44,"column_end":50},"kind":{"Impl":{"id":1}},"from":{"krate":1,"index":3001},"to":{"krate":0,"index":5}}]}