{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1","program":"C:\\Users\\Home\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","generic_array","C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=236d78d1e0fbaaf4","-C","extra-filename=-236d78d1e0fbaaf4","--out-dir","c:\\Users\\Home\\Desktop\\Programming\\Rust-Programs\\button\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Home\\Desktop\\Programming\\Rust-Programs\\button\\target\\rls\\debug\\deps","--extern","typenum=c:\\Users\\Home\\Desktop\\Programming\\Rust-Programs\\button\\target\\rls\\debug\\deps\\libtypenum-2b62f88af3d35d4c.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Home\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Home\\Desktop\\Programming\\Rust-Programs\\button\\target\\rls\\debug\\deps\\libgeneric_array-236d78d1e0fbaaf4.rmeta"},"prelude":{"crate_id":{"name":"generic_array","disambiguator":[3492028227775513550,6490432475216093695]},"crate_root":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src","external_crates":[{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[14625317234859803032,6791610349458793748]}},{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[13367216100517456726,18240828775391475830]}},{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[5927333369983577022,15909913472650230380]}},{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","num":4,"id":{"name":"typenum","disambiguator":[5806260238053524433,8448313915306359665]}}],"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":0,"byte_end":16796,"line_start":1,"line_end":626,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":141},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":1508,"byte_end":1524,"line_start":67,"line_end":67,"column_start":15,"column_end":31},"alias_span":null,"name":"GenericArrayIter","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":0,"byte_end":16796,"line_start":1,"line_end":626,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":26},{"krate":0,"index":96},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":113},{"krate":0,"index":131},{"krate":0,"index":187},{"krate":0,"index":279},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":330},{"krate":0,"index":333},{"krate":0,"index":339},{"krate":0,"index":343},{"krate":0,"index":346},{"krate":0,"index":352},{"krate":0,"index":356},{"krate":0,"index":359},{"krate":0,"index":363},{"krate":0,"index":367},{"krate":0,"index":371},{"krate":0,"index":374},{"krate":0,"index":377},{"krate":0,"index":382},{"krate":0,"index":386},{"krate":0,"index":391},{"krate":0,"index":397},{"krate":0,"index":401},{"krate":0,"index":406},{"krate":0,"index":411},{"krate":0,"index":415},{"krate":0,"index":422},{"krate":0,"index":429},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":453},{"krate":0,"index":458},{"krate":0,"index":474},{"krate":0,"index":481},{"krate":0,"index":486},{"krate":0,"index":491},{"krate":0,"index":495},{"krate":0,"index":500}],"decl_id":null,"docs":" This crate implements a structure that can be used as a generic array type.use\n Core Rust array types `[T; N]` can't be used generically with\n respect to `N`, so for example this:","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":978,"byte_end":1000,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"no_std","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":1001,"byte_end":1011,"line_start":40,"line_end":40,"column_start":1,"column_end":11}}]},{"kind":"Mod","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\arr.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"arr","qualname":"::arr","value":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\arr.rs","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":121},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":130}],"decl_id":null,"docs":" Implementation for `arr!` macro.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\arr.rs","byte_start":24091,"byte_end":24100,"line_start":8,"line_end":8,"column_start":11,"column_end":20},"name":"AddLength","qualname":"::arr::AddLength","value":"AddLength<T, N: ArrayLength<T>>: ArrayLength<T>","parent":null,"children":[{"krate":0,"index":120}],"decl_id":null,"docs":" Helper trait for `arr!` macro\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\arr.rs","byte_start":24175,"byte_end":24181,"line_start":10,"line_end":10,"column_start":10,"column_end":16},"name":"Output","qualname":"::arr::AddLength::Output","value":"type Output: ArrayLength<T>;","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" Resulting length\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":126},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\arr.rs","byte_start":24441,"byte_end":24444,"line_start":23,"line_end":23,"column_start":10,"column_end":13},"name":"Inc","qualname":"::arr::Inc","value":"<U as AddLength<T, U1>>::Output","parent":null,"children":[],"decl_id":null,"docs":" Helper type for `arr!` macro\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\iter.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iter","qualname":"::iter","value":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\iter.rs","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":135},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":147},{"krate":0,"index":152},{"krate":0,"index":158},{"krate":0,"index":162},{"krate":0,"index":166},{"krate":0,"index":170},{"krate":0,"index":179},{"krate":0,"index":183}],"decl_id":null,"docs":" `GenericArray` iterator implementation.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":141},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\iter.rs","byte_start":25896,"byte_end":25912,"line_start":8,"line_end":8,"column_start":12,"column_end":28},"name":"GenericArrayIter","qualname":"::iter::GenericArrayIter","value":"GenericArrayIter {  }","parent":null,"children":[{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146}],"decl_id":null,"docs":" An iterator that moves out of a `GenericArray`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\iter.rs","byte_start":26570,"byte_end":26578,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<GenericArrayIter<T, N>>::as_slice","value":"fn (&self) -> &[T]","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining items of this iterator as a slice\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\iter.rs","byte_start":26549,"byte_end":26558,"line_start":34,"line_end":34,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\iter.rs","byte_start":26760,"byte_end":26772,"line_start":41,"line_end":41,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<GenericArrayIter<T, N>>::as_mut_slice","value":"fn (&mut self) -> &mut [T]","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining items of this iterator as a mutable slice\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\iter.rs","byte_start":26739,"byte_end":26748,"line_start":40,"line_end":40,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":187},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\sequence.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sequence","qualname":"::sequence","value":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\sequence.rs","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":213},{"krate":0,"index":215},{"krate":0,"index":223},{"krate":0,"index":231},{"krate":0,"index":236},{"krate":0,"index":241},{"krate":0,"index":247},{"krate":0,"index":253},{"krate":0,"index":259},{"krate":0,"index":266},{"krate":0,"index":272}],"decl_id":null,"docs":" Useful traits for manipulating sequences of data stored in `GenericArray`s\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":196},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\sequence.rs","byte_start":30491,"byte_end":30506,"line_start":11,"line_end":11,"column_start":18,"column_end":33},"name":"GenericSequence","qualname":"::sequence::GenericSequence","value":"GenericSequence<T>: Sized + IntoIterator","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":207}],"decl_id":null,"docs":" Defines some sequence with an associated length and iteration capabilities.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":198},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\sequence.rs","byte_start":30584,"byte_end":30590,"line_start":13,"line_end":13,"column_start":10,"column_end":16},"name":"Length","qualname":"::sequence::GenericSequence::Length","value":"type Length: ArrayLength<T>;","parent":{"krate":0,"index":196},"children":[],"decl_id":null,"docs":" `GenericArray` associated length\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":199},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\sequence.rs","byte_start":30720,"byte_end":30728,"line_start":16,"line_end":16,"column_start":10,"column_end":18},"name":"Sequence","qualname":"::sequence::GenericSequence::Sequence","value":"type Sequence: GenericSequence<T, Length = Self::Length> + FromIterator<T>;","parent":{"krate":0,"index":196},"children":[],"decl_id":null,"docs":" Concrete sequence type used in conjuction with reference implementations of `GenericSequence`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\sequence.rs","byte_start":31009,"byte_end":31017,"line_start":22,"line_end":22,"column_start":8,"column_end":16},"name":"generate","qualname":"::sequence::GenericSequence::generate","value":"fn <F> (f: F) -> Self::Sequence","parent":{"krate":0,"index":196},"children":[],"decl_id":null,"docs":" Initializes a new sequence instance using the given function.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\sequence.rs","byte_start":31112,"byte_end":31124,"line_start":27,"line_end":27,"column_start":8,"column_end":20},"name":"inverted_zip","qualname":"::sequence::GenericSequence::inverted_zip","value":"fn <B, U, F> (self, lhs: GenericArray<B, Self::Length>, mut f: F) -> MappedSequence<GenericArray<B, Self::Length>, B, U>","parent":{"krate":0,"index":196},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\sequence.rs","byte_start":32083,"byte_end":32096,"line_start":59,"line_end":59,"column_start":8,"column_end":21},"name":"inverted_zip2","qualname":"::sequence::GenericSequence::inverted_zip2","value":"fn <B, Lhs, U, F> (self, lhs: Lhs, mut f: F) -> MappedSequence<Lhs, B, U>","parent":{"krate":0,"index":196},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\sequence.rs","byte_start":32751,"byte_end":32763,"line_start":74,"line_end":74,"column_start":10,"column_end":22},"name":"SequenceItem","qualname":"::sequence::SequenceItem","value":"<T as IntoIterator>::Item","parent":null,"children":[],"decl_id":null,"docs":" Accessor for `GenericSequence` item type, which is really `IntoIterator::Item`","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\sequence.rs","byte_start":33655,"byte_end":33663,"line_start":112,"line_end":112,"column_start":18,"column_end":26},"name":"Lengthen","qualname":"::sequence::Lengthen","value":"Lengthen<T>: Sized + GenericSequence<T>","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235}],"decl_id":null,"docs":" Defines any `GenericSequence` which can be lengthened or extended by appending\n or prepending an element to it.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\sequence.rs","byte_start":33770,"byte_end":33776,"line_start":114,"line_end":114,"column_start":10,"column_end":16},"name":"Longer","qualname":"::sequence::Lengthen::Longer","value":"type Longer: Shorten<T, Shorter = Self>;","parent":{"krate":0,"index":231},"children":[],"decl_id":null,"docs":" `GenericSequence` that has one more element than `Self`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\sequence.rs","byte_start":34082,"byte_end":34088,"line_start":127,"line_end":127,"column_start":8,"column_end":14},"name":"append","qualname":"::sequence::Lengthen::append","value":"fn (self, last: T) -> Self::Longer","parent":{"krate":0,"index":231},"children":[],"decl_id":null,"docs":" Returns a new array with the given element appended to the end of it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\sequence.rs","byte_start":34401,"byte_end":34408,"line_start":140,"line_end":140,"column_start":8,"column_end":15},"name":"prepend","qualname":"::sequence::Lengthen::prepend","value":"fn (self, first: T) -> Self::Longer","parent":{"krate":0,"index":231},"children":[],"decl_id":null,"docs":" Returns a new array with the given element prepended to the front of it.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":236},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\sequence.rs","byte_start":34676,"byte_end":34683,"line_start":147,"line_end":147,"column_start":18,"column_end":25},"name":"Shorten","qualname":"::sequence::Shorten","value":"Shorten<T>: Sized + GenericSequence<T>","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240}],"decl_id":null,"docs":" Defines a `GenericSequence` which can be shortened by removing the first or last element from it.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":238},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\sequence.rs","byte_start":34790,"byte_end":34797,"line_start":149,"line_end":149,"column_start":10,"column_end":17},"name":"Shorter","qualname":"::sequence::Shorten::Shorter","value":"type Shorter: Lengthen<T, Longer = Self>;","parent":{"krate":0,"index":236},"children":[],"decl_id":null,"docs":" `GenericSequence` that has one less element than `Self`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\sequence.rs","byte_start":35145,"byte_end":35153,"line_start":163,"line_end":163,"column_start":8,"column_end":16},"name":"pop_back","qualname":"::sequence::Shorten::pop_back","value":"fn (self) -> (Self::Shorter, T)","parent":{"krate":0,"index":236},"children":[],"decl_id":null,"docs":" Returns a new array without the last element, and the last element.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\sequence.rs","byte_start":35496,"byte_end":35505,"line_start":176,"line_end":176,"column_start":8,"column_end":17},"name":"pop_front","qualname":"::sequence::Shorten::pop_front","value":"fn (self) -> (T, Self::Shorter)","parent":{"krate":0,"index":236},"children":[],"decl_id":null,"docs":" Returns a new array without the first element, and the first element.\n Example:","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":253},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\sequence.rs","byte_start":37389,"byte_end":37394,"line_start":248,"line_end":248,"column_start":18,"column_end":23},"name":"Split","qualname":"::sequence::Split","value":"Split<T, K>: GenericSequence<T>","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258}],"decl_id":null,"docs":" Defines a `GenericSequence` that can be split into two parts at a given pivot index.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":256},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\sequence.rs","byte_start":37509,"byte_end":37514,"line_start":253,"line_end":253,"column_start":10,"column_end":15},"name":"First","qualname":"::sequence::Split::First","value":"type First: GenericSequence<T>;","parent":{"krate":0,"index":253},"children":[],"decl_id":null,"docs":" First part of the resulting split array\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\sequence.rs","byte_start":37594,"byte_end":37600,"line_start":255,"line_end":255,"column_start":10,"column_end":16},"name":"Second","qualname":"::sequence::Split::Second","value":"type Second: GenericSequence<T>;","parent":{"krate":0,"index":253},"children":[],"decl_id":null,"docs":" Second part of the resulting split array\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\sequence.rs","byte_start":37717,"byte_end":37722,"line_start":258,"line_end":258,"column_start":8,"column_end":13},"name":"split","qualname":"::sequence::Split::split","value":"fn (self) -> (Self::First, Self::Second)","parent":{"krate":0,"index":253},"children":[],"decl_id":null,"docs":" Splits an array at the given index, returning the separate parts of the array.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":266},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\sequence.rs","byte_start":38445,"byte_end":38451,"line_start":285,"line_end":285,"column_start":18,"column_end":24},"name":"Concat","qualname":"::sequence::Concat","value":"Concat<T, M>: GenericSequence<T>","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271}],"decl_id":null,"docs":" Defines `GenericSequence`s which can be joined together, forming a larger array.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":269},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\sequence.rs","byte_start":38566,"byte_end":38570,"line_start":290,"line_end":290,"column_start":10,"column_end":14},"name":"Rest","qualname":"::sequence::Concat::Rest","value":"type Rest: GenericSequence<T, Length = M>;","parent":{"krate":0,"index":266},"children":[],"decl_id":null,"docs":" Sequence to be concatenated with `self`\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":270},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\sequence.rs","byte_start":38670,"byte_end":38676,"line_start":293,"line_end":293,"column_start":10,"column_end":16},"name":"Output","qualname":"::sequence::Concat::Output","value":"type Output: GenericSequence<T>;","parent":{"krate":0,"index":266},"children":[],"decl_id":null,"docs":" Resulting sequence formed by the concatenation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\sequence.rs","byte_start":38751,"byte_end":38757,"line_start":296,"line_end":296,"column_start":8,"column_end":14},"name":"concat","qualname":"::sequence::Concat::concat","value":"fn (self, rest: Self::Rest) -> Self::Output","parent":{"krate":0,"index":266},"children":[],"decl_id":null,"docs":" Concatenate, or join, two sequences.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":279},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\functional.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"functional","qualname":"::functional","value":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\functional.rs","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":287},{"krate":0,"index":293},{"krate":0,"index":299},{"krate":0,"index":303},{"krate":0,"index":316},{"krate":0,"index":320}],"decl_id":null,"docs":" Functional programming with generic sequences","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\functional.rs","byte_start":39758,"byte_end":39779,"line_start":11,"line_end":11,"column_start":18,"column_end":39},"name":"MappedGenericSequence","qualname":"::functional::MappedGenericSequence","value":"MappedGenericSequence<T, U>: GenericSequence<T>","parent":null,"children":[{"krate":0,"index":286}],"decl_id":null,"docs":" Defines the relationship between one generic sequence and another,\n for operations such as `map` and `zip`.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":286},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\functional.rs","byte_start":39886,"byte_end":39892,"line_start":16,"line_end":16,"column_start":10,"column_end":16},"name":"Mapped","qualname":"::functional::MappedGenericSequence::Mapped","value":"type Mapped: GenericSequence<U, Length = Self::Length>;","parent":{"krate":0,"index":283},"children":[],"decl_id":null,"docs":" Mapped sequence type\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":299},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\functional.rs","byte_start":40661,"byte_end":40675,"line_start":38,"line_end":38,"column_start":10,"column_end":24},"name":"MappedSequence","qualname":"::functional::MappedSequence","value":"<<S as MappedGenericSequence<T, U>>::Mapped as GenericSequence<U>>::Sequence","parent":null,"children":[],"decl_id":null,"docs":" Accessor type for a mapped generic sequence\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":303},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\functional.rs","byte_start":40852,"byte_end":40870,"line_start":42,"line_end":42,"column_start":18,"column_end":36},"name":"FunctionalSequence","qualname":"::functional::FunctionalSequence","value":"FunctionalSequence<T>: GenericSequence<T>","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":308},{"krate":0,"index":313}],"decl_id":null,"docs":" Defines functional programming methods for generic sequences\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\functional.rs","byte_start":41161,"byte_end":41164,"line_start":47,"line_end":47,"column_start":8,"column_end":11},"name":"map","qualname":"::functional::FunctionalSequence::map","value":"fn <U, F> (self, f: F) -> MappedSequence<Self, T, U>","parent":{"krate":0,"index":303},"children":[],"decl_id":null,"docs":" Maps a `GenericSequence` to another `GenericSequence`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\functional.rs","byte_start":41803,"byte_end":41806,"line_start":62,"line_end":62,"column_start":8,"column_end":11},"name":"zip","qualname":"::functional::FunctionalSequence::zip","value":"fn <B, Rhs, U, F> (self, rhs: Rhs, f: F) -> MappedSequence<Self, T, U>","parent":{"krate":0,"index":303},"children":[],"decl_id":null,"docs":" Combines two `GenericSequence` instances and iterates through both of them,\n initializing a new `GenericSequence` with the result of the zipped mapping function.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\functional.rs","byte_start":41786,"byte_end":41795,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\functional.rs","byte_start":42366,"byte_end":42370,"line_start":76,"line_end":76,"column_start":8,"column_end":12},"name":"fold","qualname":"::functional::FunctionalSequence::fold","value":"fn <U, F> (self, init: U, f: F) -> U","parent":{"krate":0,"index":303},"children":[],"decl_id":null,"docs":" Folds (or reduces) a sequence of data into a single value.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":327},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":1646,"byte_end":1657,"line_start":71,"line_end":71,"column_start":18,"column_end":29},"name":"ArrayLength","qualname":"::ArrayLength","value":"ArrayLength<T>: Unsigned","parent":null,"children":[{"krate":0,"index":329}],"decl_id":null,"docs":" Trait making `GenericArray` work, marking types to be used as length of an array\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":329},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":1749,"byte_end":1758,"line_start":73,"line_end":73,"column_start":10,"column_end":19},"name":"ArrayType","qualname":"::ArrayLength::ArrayType","value":"type ArrayType;","parent":{"krate":0,"index":327},"children":[],"decl_id":null,"docs":" Associated type representing the array type for the number\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":333},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":1973,"byte_end":1993,"line_start":85,"line_end":85,"column_start":12,"column_end":32},"name":"GenericArrayImplEven","qualname":"::GenericArrayImplEven","value":"GenericArrayImplEven {  }","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338}],"decl_id":null,"docs":" Internal type used to generate a struct of appropriate size\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":1916,"byte_end":1935,"line_start":82,"line_end":82,"column_start":1,"column_end":20}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":1936,"byte_end":1946,"line_start":83,"line_end":83,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":346},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":2536,"byte_end":2555,"line_start":107,"line_end":107,"column_start":12,"column_end":31},"name":"GenericArrayImplOdd","qualname":"::GenericArrayImplOdd","value":"GenericArrayImplOdd {  }","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351}],"decl_id":null,"docs":" Internal type used to generate a struct of appropriate size\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":2479,"byte_end":2498,"line_start":104,"line_end":104,"column_start":1,"column_end":20}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":2499,"byte_end":2509,"line_start":105,"line_end":105,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":367},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":3369,"byte_end":3381,"line_start":137,"line_end":137,"column_start":12,"column_end":24},"name":"GenericArray","qualname":"::GenericArray","value":"GenericArray {  }","parent":null,"children":[{"krate":0,"index":370}],"decl_id":null,"docs":" Struct representing a generic array - `GenericArray<T, N>` works like [T; N]\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":3338,"byte_end":3357,"line_start":136,"line_end":136,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":386},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":4283,"byte_end":4295,"line_start":170,"line_end":170,"column_start":12,"column_end":24},"name":"ArrayBuilder","qualname":"::ArrayBuilder","value":"ArrayBuilder {  }","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":390}],"decl_id":null,"docs":" Creates an array one element at a time using a mutable iterator\n you can write to with `ptr::write`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":4488,"byte_end":4491,"line_start":178,"line_end":178,"column_start":19,"column_end":22},"name":"new","qualname":"<ArrayBuilder<T, N>>::new","value":"fn () -> ArrayBuilder<T, N>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":4460,"byte_end":4469,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":4916,"byte_end":4929,"line_start":191,"line_end":191,"column_start":19,"column_end":32},"name":"iter_position","qualname":"<ArrayBuilder<T, N>>::iter_position","value":"fn (&mut self) -> (slice::IterMut<T>, &mut usize)","parent":null,"children":[],"decl_id":null,"docs":" Creates a mutable iterator for writing to the array using `ptr::write`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":4888,"byte_end":4897,"line_start":190,"line_end":190,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":5189,"byte_end":5199,"line_start":199,"line_end":199,"column_start":19,"column_end":29},"name":"into_inner","qualname":"<ArrayBuilder<T, N>>::into_inner","value":"fn (self) -> GenericArray<T, N>","parent":null,"children":[],"decl_id":null,"docs":" When done writing (assuming all elements have been written to),\n get the inner array.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":5161,"byte_end":5170,"line_start":198,"line_end":198,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":401},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":5758,"byte_end":5771,"line_start":223,"line_end":223,"column_start":12,"column_end":25},"name":"ArrayConsumer","qualname":"::ArrayConsumer","value":"ArrayConsumer {  }","parent":null,"children":[{"krate":0,"index":404},{"krate":0,"index":405}],"decl_id":null,"docs":" Consumes an array.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":5965,"byte_end":5968,"line_start":231,"line_end":231,"column_start":19,"column_end":22},"name":"new","qualname":"<ArrayConsumer<T, N>>::new","value":"fn (array: GenericArray<T, N>) -> ArrayConsumer<T, N>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":5937,"byte_end":5946,"line_start":230,"line_end":230,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":6386,"byte_end":6399,"line_start":244,"line_end":244,"column_start":19,"column_end":32},"name":"iter_position","qualname":"<ArrayConsumer<T, N>>::iter_position","value":"fn (&mut self) -> (slice::Iter<T>, &mut usize)","parent":null,"children":[],"decl_id":null,"docs":" Creates an iterator and mutable reference to the internal position\n to keep track of consumed elements.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":6358,"byte_end":6367,"line_start":243,"line_end":243,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":12719,"byte_end":12727,"line_start":483,"line_end":483,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<GenericArray<T, N>>::as_slice","value":"fn (&self) -> &[T]","parent":null,"children":[],"decl_id":null,"docs":" Extracts a slice containing the entire array.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":12698,"byte_end":12707,"line_start":482,"line_end":482,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":12860,"byte_end":12872,"line_start":489,"line_end":489,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<GenericArray<T, N>>::as_mut_slice","value":"fn (&mut self) -> &mut [T]","parent":null,"children":[],"decl_id":null,"docs":" Extracts a mutable slice containing the entire array.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":12839,"byte_end":12848,"line_start":488,"line_end":488,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":13107,"byte_end":13117,"line_start":497,"line_end":497,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<GenericArray<T, N>>::from_slice","value":"fn (slice: &[T]) -> &GenericArray<T, N>","parent":null,"children":[],"decl_id":null,"docs":" Converts slice to a generic array reference with inferred length;","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":13086,"byte_end":13095,"line_start":496,"line_end":496,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":13355,"byte_end":13369,"line_start":505,"line_end":505,"column_start":12,"column_end":26},"name":"from_mut_slice","qualname":"<GenericArray<T, N>>::from_mut_slice","value":"fn (slice: &mut [T]) -> &mut GenericArray<T, N>","parent":null,"children":[],"decl_id":null,"docs":" Converts mutable slice to a mutable generic array reference","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":13334,"byte_end":13343,"line_start":504,"line_end":504,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":14533,"byte_end":14549,"line_start":542,"line_end":542,"column_start":12,"column_end":28},"name":"clone_from_slice","qualname":"<GenericArray<T, N>>::clone_from_slice","value":"fn (list: &[T]) -> GenericArray<T, N>","parent":null,"children":[],"decl_id":null,"docs":" Construct a `GenericArray` from a slice by cloning its content","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":14512,"byte_end":14521,"line_start":541,"line_end":541,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":14978,"byte_end":14993,"line_start":555,"line_end":555,"column_start":12,"column_end":27},"name":"from_exact_iter","qualname":"<GenericArray<T, N>>::from_exact_iter","value":"fn <I> (iter: I) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `GenericArray` instance from an iterator with a known exact size.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":500},"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":15871,"byte_end":15880,"line_start":588,"line_end":588,"column_start":15,"column_end":24},"name":"transmute","qualname":"::transmute","value":"fn <A, B> (a: A) -> B","parent":null,"children":[],"decl_id":null,"docs":" A reimplementation of the `transmute` function, avoiding problems\n when the compiler can't prove equal sizes.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":15832,"byte_end":15841,"line_start":586,"line_end":586,"column_start":1,"column_end":10}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\hex.rs","byte_start":17527,"byte_end":17539,"line_start":28,"line_end":28,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":18}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\hex.rs","byte_start":19009,"byte_end":19021,"line_start":66,"line_end":66,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\impls.rs","byte_start":20683,"byte_end":20695,"line_start":9,"line_end":9,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\impls.rs","byte_start":20852,"byte_end":20864,"line_start":19,"line_end":19,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\impls.rs","byte_start":21013,"byte_end":21025,"line_start":28,"line_end":28,"column_start":27,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\impls.rs","byte_start":21126,"byte_end":21138,"line_start":35,"line_end":35,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\impls.rs","byte_start":21273,"byte_end":21285,"line_start":43,"line_end":43,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\impls.rs","byte_start":21364,"byte_end":21376,"line_start":49,"line_end":49,"column_start":39,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\impls.rs","byte_start":21590,"byte_end":21602,"line_start":58,"line_end":58,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\impls.rs","byte_start":21789,"byte_end":21801,"line_start":67,"line_end":67,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\impls.rs","byte_start":21962,"byte_end":21974,"line_start":76,"line_end":76,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\impls.rs","byte_start":22100,"byte_end":22112,"line_start":85,"line_end":85,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\impls.rs","byte_start":22250,"byte_end":22262,"line_start":94,"line_end":94,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\impls.rs","byte_start":22384,"byte_end":22396,"line_start":103,"line_end":103,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\impls.rs","byte_start":22530,"byte_end":22542,"line_start":112,"line_end":112,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\arr.rs","byte_start":24239,"byte_end":24241,"line_start":13,"line_end":13,"column_start":38,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\iter.rs","byte_start":26427,"byte_end":26443,"line_start":29,"line_end":29,"column_start":12,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\iter.rs","byte_start":26903,"byte_end":26915,"line_start":46,"line_end":46,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\iter.rs","byte_start":27290,"byte_end":27306,"line_start":63,"line_end":63,"column_start":39,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\iter.rs","byte_start":27533,"byte_end":27549,"line_start":74,"line_end":74,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\iter.rs","byte_start":27872,"byte_end":27888,"line_start":90,"line_end":90,"column_start":29,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\iter.rs","byte_start":28516,"byte_end":28532,"line_start":115,"line_end":115,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\iter.rs","byte_start":29605,"byte_end":29621,"line_start":166,"line_end":166,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\iter.rs","byte_start":29947,"byte_end":29963,"line_start":181,"line_end":181,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\sequence.rs","byte_start":35588,"byte_end":35600,"line_start":179,"line_end":179,"column_start":51,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\sequence.rs","byte_start":36448,"byte_end":36460,"line_start":213,"line_end":213,"column_start":50,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\sequence.rs","byte_start":37801,"byte_end":37813,"line_start":261,"line_end":261,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\sequence.rs","byte_start":38840,"byte_end":38852,"line_start":299,"line_end":299,"column_start":39,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":1797,"byte_end":1802,"line_start":76,"line_end":76,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":2101,"byte_end":2121,"line_start":91,"line_end":91,"column_start":36,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":2384,"byte_end":2404,"line_start":101,"line_end":101,"column_start":33,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":2647,"byte_end":2666,"line_start":113,"line_end":113,"column_start":36,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":2930,"byte_end":2949,"line_start":123,"line_end":123,"column_start":33,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":3013,"byte_end":3017,"line_start":125,"line_end":125,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":3162,"byte_end":3166,"line_start":130,"line_end":130,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":3482,"byte_end":3494,"line_start":141,"line_end":141,"column_start":50,"column_end":62},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":3553,"byte_end":3565,"line_start":142,"line_end":142,"column_start":50,"column_end":62},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":3597,"byte_end":3609,"line_start":144,"line_end":144,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":3823,"byte_end":3835,"line_start":155,"line_end":155,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":4416,"byte_end":4428,"line_start":175,"line_end":175,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":5388,"byte_end":5400,"line_start":208,"line_end":208,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":5892,"byte_end":5905,"line_start":228,"line_end":228,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":409},{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":6538,"byte_end":6551,"line_start":249,"line_end":249,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":7327,"byte_end":7339,"line_start":283,"line_end":283,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":8284,"byte_end":8296,"line_start":322,"line_end":322,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":442},{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":10910,"byte_end":10922,"line_start":411,"line_end":411,"column_start":54,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":11118,"byte_end":11130,"line_start":419,"line_end":419,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":465},{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":12590,"byte_end":12602,"line_start":477,"line_end":477,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":14310,"byte_end":14322,"line_start":534,"line_end":534,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":14724,"byte_end":14736,"line_start":548,"line_end":548,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":1417,"byte_end":1420,"line_start":61,"line_end":61,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":113}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":1430,"byte_end":1434,"line_start":62,"line_end":62,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":131}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":1444,"byte_end":1452,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":187}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":1462,"byte_end":1472,"line_start":64,"line_end":64,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":279}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\hex.rs","byte_start":17527,"byte_end":17539,"line_start":28,"line_end":28,"column_start":44,"column_end":56},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":367},"to":{"krate":1,"index":7654}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\hex.rs","byte_start":19009,"byte_end":19021,"line_start":66,"line_end":66,"column_start":44,"column_end":56},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":367},"to":{"krate":1,"index":7656}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\impls.rs","byte_start":20683,"byte_end":20695,"line_start":9,"line_end":9,"column_start":33,"column_end":45},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":367},"to":{"krate":1,"index":2206}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\impls.rs","byte_start":20852,"byte_end":20864,"line_start":19,"line_end":19,"column_start":29,"column_end":41},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":367},"to":{"krate":1,"index":2181}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\impls.rs","byte_start":21013,"byte_end":21025,"line_start":28,"line_end":28,"column_start":27,"column_end":39},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":367},"to":{"krate":1,"index":1543}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\impls.rs","byte_start":21126,"byte_end":21138,"line_start":35,"line_end":35,"column_start":37,"column_end":49},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":367},"to":{"krate":1,"index":2040}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\impls.rs","byte_start":21273,"byte_end":21285,"line_start":43,"line_end":43,"column_start":23,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":367},"to":{"krate":1,"index":2045}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\impls.rs","byte_start":21364,"byte_end":21376,"line_start":49,"line_end":49,"column_start":39,"column_end":51},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":367},"to":{"krate":1,"index":2077}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\impls.rs","byte_start":21590,"byte_end":21602,"line_start":58,"line_end":58,"column_start":25,"column_end":37},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":367},"to":{"krate":1,"index":2066}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\impls.rs","byte_start":21789,"byte_end":21801,"line_start":67,"line_end":67,"column_start":29,"column_end":41},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":367},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\impls.rs","byte_start":21962,"byte_end":21974,"line_start":76,"line_end":76,"column_start":28,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":367},"to":{"krate":1,"index":2325}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\impls.rs","byte_start":22100,"byte_end":22112,"line_start":85,"line_end":85,"column_start":31,"column_end":43},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":367},"to":{"krate":1,"index":2328}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\impls.rs","byte_start":22250,"byte_end":22262,"line_start":94,"line_end":94,"column_start":27,"column_end":39},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":367},"to":{"krate":1,"index":2249}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\impls.rs","byte_start":22384,"byte_end":22396,"line_start":103,"line_end":103,"column_start":27,"column_end":39},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":367},"to":{"krate":1,"index":2252}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\impls.rs","byte_start":22530,"byte_end":22542,"line_start":112,"line_end":112,"column_start":27,"column_end":39},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":367},"to":{"krate":1,"index":7285}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\arr.rs","byte_start":24124,"byte_end":24135,"line_start":8,"line_end":8,"column_start":44,"column_end":55},"kind":"SuperTrait","from":{"krate":0,"index":327},"to":{"krate":0,"index":117}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\arr.rs","byte_start":24239,"byte_end":24241,"line_start":13,"line_end":13,"column_start":38,"column_end":40},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":123},"to":{"krate":0,"index":117}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\iter.rs","byte_start":26427,"byte_end":26443,"line_start":29,"line_end":29,"column_start":12,"column_end":28},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":141},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\iter.rs","byte_start":26903,"byte_end":26915,"line_start":46,"line_end":46,"column_start":29,"column_end":41},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":367},"to":{"krate":1,"index":3951}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\iter.rs","byte_start":27290,"byte_end":27306,"line_start":63,"line_end":63,"column_start":39,"column_end":55},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":141},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\iter.rs","byte_start":27533,"byte_end":27549,"line_start":74,"line_end":74,"column_start":21,"column_end":37},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":141},"to":{"krate":1,"index":1726}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\iter.rs","byte_start":27872,"byte_end":27888,"line_start":90,"line_end":90,"column_start":29,"column_end":45},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":141},"to":{"krate":1,"index":2181}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\iter.rs","byte_start":28516,"byte_end":28532,"line_start":115,"line_end":115,"column_start":25,"column_end":41},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":141},"to":{"krate":1,"index":3653}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\iter.rs","byte_start":29605,"byte_end":29621,"line_start":166,"line_end":166,"column_start":36,"column_end":52},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":141},"to":{"krate":1,"index":3910}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\iter.rs","byte_start":29947,"byte_end":29963,"line_start":181,"line_end":181,"column_start":34,"column_end":50},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":141},"to":{"krate":1,"index":3939}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\sequence.rs","byte_start":30511,"byte_end":30516,"line_start":11,"line_end":11,"column_start":38,"column_end":43},"kind":"SuperTrait","from":{"krate":1,"index":1538},"to":{"krate":0,"index":196}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\sequence.rs","byte_start":30519,"byte_end":30531,"line_start":11,"line_end":11,"column_start":46,"column_end":58},"kind":"SuperTrait","from":{"krate":1,"index":3951},"to":{"krate":0,"index":196}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\sequence.rs","byte_start":33668,"byte_end":33673,"line_start":112,"line_end":112,"column_start":31,"column_end":36},"kind":"SuperTrait","from":{"krate":1,"index":1538},"to":{"krate":0,"index":231}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\sequence.rs","byte_start":33676,"byte_end":33691,"line_start":112,"line_end":112,"column_start":39,"column_end":54},"kind":"SuperTrait","from":{"krate":0,"index":196},"to":{"krate":0,"index":231}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\sequence.rs","byte_start":34688,"byte_end":34693,"line_start":147,"line_end":147,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":1538},"to":{"krate":0,"index":236}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\sequence.rs","byte_start":34696,"byte_end":34711,"line_start":147,"line_end":147,"column_start":38,"column_end":53},"kind":"SuperTrait","from":{"krate":0,"index":196},"to":{"krate":0,"index":236}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\sequence.rs","byte_start":35588,"byte_end":35600,"line_start":179,"line_end":179,"column_start":51,"column_end":63},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":367},"to":{"krate":0,"index":231}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\sequence.rs","byte_start":36448,"byte_end":36460,"line_start":213,"line_end":213,"column_start":50,"column_end":62},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":367},"to":{"krate":0,"index":236}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\sequence.rs","byte_start":37402,"byte_end":37417,"line_start":248,"line_end":248,"column_start":31,"column_end":46},"kind":"SuperTrait","from":{"krate":0,"index":196},"to":{"krate":0,"index":253}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\sequence.rs","byte_start":37801,"byte_end":37813,"line_start":261,"line_end":261,"column_start":38,"column_end":50},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":367},"to":{"krate":0,"index":253}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\sequence.rs","byte_start":38459,"byte_end":38474,"line_start":285,"line_end":285,"column_start":32,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":196},"to":{"krate":0,"index":266}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\sequence.rs","byte_start":38840,"byte_end":38852,"line_start":299,"line_end":299,"column_start":39,"column_end":51},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":367},"to":{"krate":0,"index":266}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\functional.rs","byte_start":39787,"byte_end":39802,"line_start":11,"line_end":11,"column_start":47,"column_end":62},"kind":"SuperTrait","from":{"krate":0,"index":196},"to":{"krate":0,"index":283}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\functional.rs","byte_start":40875,"byte_end":40890,"line_start":42,"line_end":42,"column_start":41,"column_end":56},"kind":"SuperTrait","from":{"krate":0,"index":196},"to":{"krate":0,"index":303}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":1662,"byte_end":1670,"line_start":71,"line_end":71,"column_start":34,"column_end":42},"kind":"SuperTrait","from":{"krate":4,"index":502},"to":{"krate":0,"index":327}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":1797,"byte_end":1802,"line_start":76,"line_end":76,"column_start":35,"column_end":40},"kind":{"Impl":{"id":28}},"from":{"krate":4,"index":5928},"to":{"krate":0,"index":327}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":2101,"byte_end":2121,"line_start":91,"line_end":91,"column_start":36,"column_end":56},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":333},"to":{"krate":1,"index":2181}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":2384,"byte_end":2404,"line_start":101,"line_end":101,"column_start":33,"column_end":53},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":333},"to":{"krate":1,"index":1543}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":2647,"byte_end":2666,"line_start":113,"line_end":113,"column_start":36,"column_end":55},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":346},"to":{"krate":1,"index":2181}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":2930,"byte_end":2949,"line_start":123,"line_end":123,"column_start":33,"column_end":52},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":346},"to":{"krate":1,"index":1543}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":3013,"byte_end":3017,"line_start":125,"line_end":125,"column_start":54,"column_end":58},"kind":{"Impl":{"id":33}},"from":{"krate":4,"index":5877},"to":{"krate":0,"index":327}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":3162,"byte_end":3166,"line_start":130,"line_end":130,"column_start":54,"column_end":58},"kind":{"Impl":{"id":34}},"from":{"krate":4,"index":5877},"to":{"krate":0,"index":327}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":3482,"byte_end":3494,"line_start":141,"line_end":141,"column_start":50,"column_end":62},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":367},"to":{"krate":1,"index":1533}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":3553,"byte_end":3565,"line_start":142,"line_end":142,"column_start":50,"column_end":62},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":367},"to":{"krate":1,"index":1545}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":3597,"byte_end":3609,"line_start":144,"line_end":144,"column_start":22,"column_end":34},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":367},"to":{"krate":1,"index":1704}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":3823,"byte_end":3835,"line_start":155,"line_end":155,"column_start":25,"column_end":37},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":367},"to":{"krate":1,"index":1715}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":4416,"byte_end":4428,"line_start":175,"line_end":175,"column_start":28,"column_end":40},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":386},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":5388,"byte_end":5400,"line_start":208,"line_end":208,"column_start":37,"column_end":49},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":386},"to":{"krate":1,"index":1726}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":5892,"byte_end":5905,"line_start":228,"line_end":228,"column_start":28,"column_end":41},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":401},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":6538,"byte_end":6551,"line_start":249,"line_end":249,"column_start":37,"column_end":50},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":401},"to":{"krate":1,"index":1726}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":7327,"byte_end":7339,"line_start":283,"line_end":283,"column_start":32,"column_end":44},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":367},"to":{"krate":1,"index":3947}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":8284,"byte_end":8296,"line_start":322,"line_end":322,"column_start":42,"column_end":54},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":367},"to":{"krate":0,"index":196}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":10910,"byte_end":10922,"line_start":411,"line_end":411,"column_start":54,"column_end":66},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":367},"to":{"krate":0,"index":283}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":11118,"byte_end":11130,"line_start":419,"line_end":419,"column_start":45,"column_end":57},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":367},"to":{"krate":0,"index":303}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":12590,"byte_end":12602,"line_start":477,"line_end":477,"column_start":12,"column_end":24},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":367},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":14310,"byte_end":14322,"line_start":534,"line_end":534,"column_start":19,"column_end":31},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":367},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Home\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\generic-array-0.11.1\\src\\lib.rs","byte_start":14724,"byte_end":14736,"line_start":548,"line_end":548,"column_start":12,"column_end":24},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":367},"to":{"krate":4294967295,"index":4294967295}}]}